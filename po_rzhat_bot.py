import logging
from filemanagement import *
import telegram
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters
from telegram import (ReplyKeyboardMarkup, ReplyKeyboardRemove, InputMediaPhoto)
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)
logger = logging.getLogger(__name__)

editingIDs = []
positions = []
stringsToRemember = []

from key import token

catBot = telegram.Bot(token)

def echo(update, context):
    id = update.message.chat_id
    print("C–æ–æ–±—â–µ–Ω–∏–µ: '{}' –æ—Ç {}, –≤—Ä–µ–º—è: {}".format(update.message.text, id, update.message.date))

    isEditing = id in editingIDs
    position = 0
    strings = []

    
    if isEditing:
        index = editingIDs.index(id)
        position = positions[index]
        strings = stringsToRemember[index]

    def keyboardGen():
        buttons = [["–î–æ–±–∞–≤–∏—Ç—å –º–µ–º üòé"]]
        isAdmin = "{}\n".format(id) in getAdminList()

        if isAdmin:
            buttons.append(["–ü—Ä–µ–∫—Ä–∞—Ç–∏—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ ü•µ"])
        else:
            buttons.append(["–û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ –º–µ–º—ã üì®"])

        keyboard = ReplyKeyboardMarkup(buttons)
        if isEditing:
            keyboard = ReplyKeyboardMarkup([["–û—Ç–º–µ–Ω–∞"]])
        return keyboard      

    if (isEditing == False and update.message.photo):
        update.message.reply_text("–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É '–î–æ–±–∞–≤–∏—Ç—å –º–µ–º üòé'", reply_markup = keyboardGen())
        return

    if (update.message.text == "/start"):
        message = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! üòá\n–≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è –ø–æ–∏—Å–∫–∞ –º–µ–º–æ–≤ —Å—Ä–µ–¥–∏ –º–µ–º–æ–≤ –ø—Ä–æ –∫–æ—Ç–æ–≤ (–ø–æ —Ä–∂–∞—Ç—å). –ú–µ–º—ã –≤ –Ω–µ–≥–æ –¥–æ–±–∞–≤–ª—è—é—Ç —Å–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏, –≤—ã —Ç–æ–∂–µ –º–æ–∂–µ—Ç–µ —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å. ü§ì\n–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –º–µ–º - –Ω–∞–ø–∏—à–∏ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É - –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É '–î–æ–±–∞–≤–∏—Ç—å –º–µ–º üòé'"
        update.message.reply_text(message, reply_markup = keyboardGen())
    elif (update.message.text == "–î–æ–±–∞–≤–∏—Ç—å –º–µ–º üòé"):
        editingIDs.append(id)
        positions.append(1)
        position = 1
        stringsToRemember.append([])
        isEditing = True
        update.message.reply_text("–û—Ç–ø—Ä–∞–≤—å—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –∫–∞—Ä—Ç–∏–Ω–∫—É, –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å", reply_markup = keyboardGen())
    elif (update.message.text == "–û—Ç–º–µ–Ω–∞"):
        if isEditing:
            index = editingIDs.index(id)
            del positions[index]
            del stringsToRemember[index]
            del editingIDs[index]
            isEditing = False
        update.message.reply_text("–û—Ç–º–µ–Ω–µ–Ω–æ üò≥", reply_markup = keyboardGen())
    elif (update.message.text == "–û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ –º–µ–º—ã üì®"):
        isAdmin = "{}\n".format(id) in getAdminList()
        if isAdmin == False:
            addAdmin(id)
            update.message.reply_text("–¢–µ–ø–µ—Ä—å –∫–æ–≥–¥–∞ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π –º–µ–º, –≤–∞–º –ø—Ä–∏–¥–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ. –ù–∞ —Å–∞–º–æ–º –¥–µ–ª–µ, —è —ç—Ç–æ –¥–æ–±–∞–≤–∏–ª –¥–ª—è —Å–µ–±—è, —á—Ç–æ–±—ã —Ö–æ—Ç—å –∫–∞–∫-—Ç–æ –º–æ–¥–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Ç–æ–∫ –∫–∞—Ä—Ç–∏–Ω–æ–∫, –Ω–æ –µ—Å–ª–∏ –≤–∞–º –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ - —Ç–æ–∂–µ —Å–º–æ—Ç—Ä–∏—Ç–µ üòâ", reply_markup = keyboardGen())
    elif (update.message.text == "–ü—Ä–µ–∫—Ä–∞—Ç–∏—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ ü•µ"):
        isAdmin = "{}\n".format(id) in getAdminList()
        if (isAdmin):
            deleteAdmin(id)
        update.message.reply_text("–•–æ—Ä–æ—à–æ, —Ç–µ–ø–µ—Ä—å –≤–∞–º –±–æ–ª—å—à–µ –Ω–µ –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –∫–∞—Ä—Ç–∏–Ω–∫–∞—Ö –≤ –±–∞–∑–µ", reply_markup = keyboardGen())
    
    elif (position == 1):
        if (update.message.photo):
            fileID = update.message.photo[-1].file_id
            strings.append(fileID)
            message = "–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –ø—Ä–∏–Ω—è—Ç–∞. –¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏—Ç–µ —Ç–µ–≥–∏, –ø–æ –∫–æ—Ç–æ—Ä–º—ã –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –Ω–∞–π—Ç–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é (–Ω–∞–ø—Ä–∏–º–µ—Ä, '–∫—É—Ä—Å –¥–µ–Ω–µ–≥ —É–ø–∞–ª, –¥–µ–Ω—å–≥–∏, –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–∞') ü§ì"
            update.message.reply_text(message, reply_markup = keyboardGen())
            position = 2
        else:
            update.message.reply_text("–Ø –ø—Ä–æ—Å–∏–ª –≤–∞—Å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é, –∞ –Ω–µ —Ç–µ–∫—Å—Ç üôÑ\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é")

    elif (position == 2):
        input = update.message.text
        input = input.replace(";",",")
        input = input.replace(".", " ")
        addStringLine(id, update.message.text, strings[0])
        admins = getAdminList()
        for i in range(0, len(admins)):
            textMessage = "{}: –¥–æ–±–∞–≤–ª–µ–Ω–∞ –Ω–æ–≤–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞ –ø–æ —Ç–µ–≥–∞–º: {}".format(id,update.message.text)
            catBot.send_message(chat_id = int(admins[i]), text = textMessage)
            catBot.send_photo(chat_id = int(admins[i]), photo = strings[0])
        
        isEditing = False
        del positions[index]
        del stringsToRemember[index]
        del editingIDs[index]
        update.message.reply_text("–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ üòå", reply_markup = keyboardGen())


    else:
        photos = getPhotoIDs(update.message.text)
        if (len(photos) == 0):
            update.message.reply_text("–í –±–∞–∑–µ –±–æ—Ç–∞ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –í—ã –ø–æ—Ç–æ–º –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –Ω–∞–π–¥–µ–Ω–Ω—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É –≤ –±–∞–∑—É –±–æ—Ç–∞, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É '–î–æ–±–∞–≤–∏—Ç—å –º–µ–º üòé'", reply_markup = keyboardGen())
            return
        if (len(photos) == 1):
            textMessage = "–ù–∞–π–¥–µ–Ω–∞ –æ–¥–Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∞:"
            update.message.reply_text(textMessage, reply_markup = keyboardGen())
            update.message.reply_photo(photos[0])
            return

        textMessage = "–ù–∞–π–¥–µ–Ω–Ω—ã–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏:"
        update.message.reply_text(textMessage, reply_markup = keyboardGen())
        mediagroup = []
        for i in range(0, len(photos)):
            mediagroup.append(photos[i])
            if (len(mediagroup) == 10):
                update.message.reply_media_group([InputMediaPhoto(ph) for ph in mediagroup])
                mediagroup = []
        if (len(mediagroup) == 1):
            update.message.reply_photo(mediagroup[0])
        elif (len(mediagroup) > 1):
            update.message.reply_media_group([InputMediaPhoto(ph) for ph in mediagroup]) 
    
    if (isEditing):
        index = editingIDs.index(id)
        positions[index] = position
        stringsToRemember[index] = strings

def error (update, context):
    logger.warning('Update "%s" caused error "%s"', update, context.error)
    update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, —Å–æ–æ–±—â–∏—Ç–µ –æ–± —ç—Ç–æ–º —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É (–∫–æ–Ω—Ç–∞–∫—Ç –µ—Å—Ç—å –≤ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ)")

def main():
    updater = Updater(token, use_context=True)
    dp = updater.dispatcher
    dp.add_handler(MessageHandler(Filters.text | Filters.photo, echo))
    dp.add_error_handler(error)
    updater.start_polling()
    updater.idle()

main()